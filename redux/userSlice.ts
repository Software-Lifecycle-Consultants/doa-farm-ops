import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';
import { RootState, User } from './types';
import { fetchUserData } from '@/api/fetchUserData';

// Define the initial state for the user slice
const initialState: { user: User | null } = {
  user: null,
};

// Define an async thunk action creator to fetch and register user details
export const fetchAndRegisterUser = createAsyncThunk(
  'user/fetchAndRegisterUser',
  async (userId: string) => {
    // Fetch user data using the provided userId
    const userData = await fetchUserData(userId);
    // Return the user data fetched from the API
    return userData.user;
  }
);

// Create a slice for managing user state
const userSlice = createSlice({
  name: 'user',
  initialState,
  reducers: {
    // Define a reducer function to register user details
    register: (state, action) => {
      // Update the user details in the state based on the action payload
      state.user = action.payload;
    },
  },
  // Handle extra reducers for async actions
  extraReducers: (builder) => {
    // Handle the fulfilled action of fetchAndRegisterUser
    builder.addCase(fetchAndRegisterUser.fulfilled, (state, action: PayloadAction<User>) => {
      // Update the user details in the state based on the action payload
      state.user = action.payload;
    });
  },
});

// Export the reducer and actions generated by the user slice
export const { register } = userSlice.actions;

// Define a selector function to select user details from the state
export const selectUser = (state: RootState) => state.user.user;

// Export the user reducer
export default userSlice.reducer;
